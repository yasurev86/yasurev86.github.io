import { Metadata, Viewport } from 'next';
import '@/shared/styles/globals.scss';
import Layout from '@/_app/layouts/Layout';
import { AppProvider } from '@/_app/providers/AppProvider';
import { ReactNode } from 'react';
import localFont from 'next/font/local';
import clsx from 'clsx';

const craftworkGrotesk = localFont({
	variable: '--CraftworkGrotesk',
	src: [
		{
			style: 'normal',
			weight: 'normal',
			path: 'fonts/Craftwork Grotesk/CraftworkGrotesk-Regular.woff',
		},
		{
			style: 'normal',
			weight: '500',
			path: 'fonts/Craftwork Grotesk/CraftworkGrotesk-Medium.woff',
		},
		{
			style: 'normal',
			weight: '600',
			path: 'fonts/Craftwork Grotesk/CraftworkGrotesk-SemiBold.woff',
		},
		{
			style: 'normal',
			weight: '700',
			path: 'fonts/Craftwork Grotesk/CraftworkGrotesk-Bold.woff',
		},
		{
			style: 'normal',
			weight: '800',
			path: 'fonts/Craftwork Grotesk/CraftworkGrotesk-Heavy.woff',
		},
	],
});

const craftworkSans = localFont({
	variable: '--CraftworkSans',
	src: [
		{
			style: 'normal',
			weight: 'normal',
			path: 'fonts/Craftwork Sans/CraftworkSans-Regular.woff',
		},
		{
			style: 'normal',
			weight: '500',
			path: 'fonts/Craftwork Sans/CraftworkSans-Medium.woff',
		},
		{
			style: 'normal',
			weight: '600',
			path: 'fonts/Craftwork Sans/CraftworkSans-SemiBold.woff',
		},
		{
			style: 'normal',
			weight: '700',
			path: 'fonts/Craftwork Sans/CraftworkSans-Bold.woff',
		},
		{
			style: 'normal',
			weight: '900',
			path: 'fonts/Craftwork Sans/CraftworkSans-Black.woff',
		},
	],
});

export const metadata: Metadata = {
	title: 'shop',
	description: 'Generated by create next app',
	formatDetection: {
		telephone: false,
		date: false,
		email: false,
		address: false,
	},
};

export const viewport: Viewport = {
	width: 'device-width',
	initialScale: 1,
	userScalable: false,
};

export default function RootLayout({
	children,
}: Readonly<{
	children: ReactNode;
}>) {
	return (
		<html lang="en">
			<body
				className={clsx(
					craftworkGrotesk.variable,
					craftworkSans.variable,
				)}
			>
				<AppProvider>
					<Layout>{children}</Layout>
				</AppProvider>
			</body>
		</html>
	);
}
